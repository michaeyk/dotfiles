# Pywal
include "$HOME/.cache/wal/colors-sway"

# Variables
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term kitty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | wofi --show drun | xargs swaymsg exec --

# Pywal Coloring
# class                 border          background      text         indicator         child_border
client.focused          $color2         $color2         $foreground  $color2           $color2
client.focused_inactive $background     $background     $foreground  $background       $background
client.unfocused        $background     $background     $foreground  $background       $background
client.urgent           $color2         $color2         $foreground  $color2           $color2
client.placeholder      $color2         $color2         $foreground  $color2           $color2
client.background       $color2

# Output configuration
output "*" background $wallpaper fill

output eDP-1 pos 3840 0 scale 2
output DP-5 pos 1920 0 res 3440x1440 
# output DP-1 pos 1920 0 res 3440x1440 
output DP-1 pos 0 0 res 3840x1600

# Workspaces
workspace 1 output eDP-1
workspace 2 output DP-5 DP-1
workspace 3 output DP-5 DP-1
workspace 4 output eDP-1
workspace 5 output DP-5 DP-1 
workspace 6 output DP-5 DP-1 
workspace 7 
workspace 8
workspace 9 
workspace 10 output eDP-1

# Input configuration
input type:keyboard {
  xkb_options ctrl:nocaps
}

input type:touchpad {
  tap enabled
}

# touchscreen
input "1386:18670:Wacom_HID_48EE_Pen" {
  map_to_output eDP-1
}

# sets the gaps and borders
for_window [tiling] border pixel 4
for_window [floating] border pixel 4

smart_gaps on
gaps inner 8
gaps outer 8

# Multimedia & backlight keys:
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%

# Screenshots using grim and slurp
bindsym Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') /tmp/screenshot.png && ~/bin/screenshot.sh
bindsym Control+Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | wl-copy
bindsym Shift+Print exec grim -g "$(slurp)" /tmp/screenshot.png && ~/bin/screenshot.sh
bindsym Control+Shift+Print exec grim -g "$(slurp)" - | swappy -f -

# Key bindings for launching apps
bindsym $mod+g exec firefox
bindsym $mod+u [app_id="dropdown"] scratchpad show, resize set 50 ppt 50 ppt 
bindsym $mod+c [app_id="calc"] scratchpad show, resize set 30 ppt 30 ppt

# Window specifics
for_window [app_id="pavucontrol"] floating enable 
for_window [app_id="pavucontrol"] resize set 30 ppt 30 ppt

for_window [app_id="dropdown"] floating enable 
for_window [app_id="dropdown"] move scratchpad

for_window [app_id="calc"] floating enable 
for_window [app_id="calc"] move scratchpad

for_window [title=".*thinkorswim.*"] move workspace 1
for_window [app_id="terminal"] move workspace 3
for_window [class="Spotify"] move workspace 4

# Assign apps to workspaces
assign [class="firefox"] workspace 2
assign [app_id="profanity"] workspace 5
assign [app_id="mutt"] workspace 6

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    bindsym $mod+Tab workspace back_and_forth

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
bar {
    swaybar_command waybar
}

# Launch on start
exec_always "$HOME/.config/mako/launch.sh"
exec rot8
exec swayidle -w \
         timeout 600 'swaylock -f -c 000000' \
         timeout 900 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
exec $term --class dropdown -e tmux new -s dropdown
exec $term --class terminal -e tmux new -s terminal
exec $term --class calc -e python
exec firefox
exec $term --class profanity -e profanity
exec spotify
exec $term --class mutt -e mutt
exec ~/bin/thinkorswim

include /etc/sway/config.d/*
